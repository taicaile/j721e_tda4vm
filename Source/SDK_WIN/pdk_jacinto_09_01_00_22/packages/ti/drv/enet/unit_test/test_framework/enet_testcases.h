/*
 *  Copyright (c) Texas Instruments Incorporated 2020
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 *  \file enet_testcases.h
 *
 *  \brief This file defines the test cases for CPSW UT.
 */

#ifndef ENET_TEST_CASES_H_
#define ENET_TEST_CASES_H_

/* ========================================================================== */
/*                             Include Files                                  */
/* ========================================================================== */

#include "enet_testconfig.h"

#ifdef __cplusplus
extern "C" {
#endif

/* ========================================================================== */
/*                           Macros & Typedefs                                */
/* ========================================================================== */

#define ENET_TEST_NUM_TESTCASES         ((sizeof(gEnetTestCases)) / (sizeof(EnetTestParams)))

#ifndef KB
#define KB                              (1024U)
#endif

#ifndef MB
#define MB                              (KB * KB)
#endif

/* ========================================================================== */
/*                          Function Declarations                             */
/* ========================================================================== */

/* None */

/* ========================================================================== */
/*                            Global Variables                                */
/* ========================================================================== */

/** \brief Defines the various CPSW test cases. */
static EnetTestParams gEnetTestCases[] =
{
    /*{
     *  .enableTest       = TEST_DISABLE,
     *  .tcId             = 0U,
     *  .tcName           = "Test case name",
     *  .tcRunInfo        = "Test case running instructions",
     *  .disableInfo      = NULL,
     *  .printEnable      = PRINT_DISABLE,
     *  .profilingEnable  = PRF_DISABLE,
     *  .tcType           = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
     *  .dcEnable         = DATA_CHECK_DISABLE,
     *  .iterationCnt     = ENET_TEST_DEF_ITERATION_CNT,
     *  .numTasks         = 1U,
     *  .testType         = {
     *                          ENET_TEST_TYPE_J721E,
     *                      },
     *  .taskCfgId          = {
     *                          TASK_CFG_ID_COMMON_TEST,
     *                      },
     * },*/
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 1U,
        .tcName          = "CPSW9G Switching test",
        .tcRunInfo       = "To be added",
        .reqMapping      = "PDK-3103",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 2U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_SWITCH_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 2U,
        .tcName          = "ALE auto learn test",
        .tcRunInfo       = "To be added",
        .reqMapping      = "PDK-2995",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_ALE_AUTO_LEARN_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 3U,
        .tcName          = "ALE auto learn VLAN test",
        .tcRunInfo       = "To be added",
        .reqMapping      = "PDK-2996",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_ALE_AUTO_LEARN_VLAN_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 4U,
        .tcName          = "Mac speed test",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_MAC_SPEED_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 5U,
        .tcName          = "Statistics test",
        .tcRunInfo       = "To be added",
        .reqMapping      = "PDK-3176",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_STATS_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 6U,
        .tcName          = "VLAN test",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 10U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_VLAN_TEST, },
    },
    {
        .enableTest      = TEST_DISABLE, /* Issue under debug */
        .tcId            = 7U,
        .tcName          = "Aging and Max packet length test",
        .tcRunInfo       = "To be added",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_AGING_MAXLEN_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 8U,
        .tcName          = "CRC strip test",
        .tcRunInfo       = "To be added",
        .reqMapping      = "PDK-2999",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_CRCSTRIP_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 9U,
        .tcName          = "FIFO stats test",
        .tcRunInfo       = "To be added",
        .reqMapping      = "PDK-3177",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_FIFOSTATS_TEST, },
    },

    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 10U,
        .tcName          = "ALE source address update",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_SRCADDRUPDATE_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 11U,
        .tcName          = "ALE Table full",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_TABLEFULL_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 12U,
        .tcName          = "VLAN drop untagged",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_VLAN_DROP_UNTAGGED_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 13U,
        .tcName          = "Multicast support",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_MULTICAST_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 14U,
        .tcName          = "Policer test",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_POLICER_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 15U,
        .tcName          = "Network security test",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_SECURITY_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 16U,
        .tcName          = "Host port Rx Filter",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_RXFILTER_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 17U,
        .tcName          = "policer no match red drop enable test ",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_POLICER_NOMATCH_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 18U,
        .tcName          = "policer no match yellow drop enable test ",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_POLICER_NOMATCH_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 19U,
        .tcName          = "policer no match unregulated traffic test ",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_MAXWELL, },
        .taskCfgId       = {TASK_CFG_ID_POLICER_NOMATCH_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 20U,
        .tcName          = "Intervlan test ",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_INTERVLAN_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 21U,
        .tcName          = "Default priority",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_DEFAULT_PRI_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 22U,
        .tcName          = "Port VLAN ID",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_PVID_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 23U,
        .tcName          = "Sanity Test",
        .tcRunInfo       = "\"sudo ./hostApp -i enp3s0f0\"",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = ENET_TEST_SANITY_NUM_ITERATIONS,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_SANITY_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 24U,
        .tcName          = "Outer VLAN Test",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_OUTERVLAN_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 25U,
        .tcName          = "Traffic shaping Test",
        .tcRunInfo       = "To be added",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_TRAFFICSHAPING_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 26U,
        .tcName          = "1-Gbps Full-Duplex Auto-Neg Test",
        .tcRunInfo       = "\"sudo ethtool -s enp3s0f0 speed 1000 duplex half autoneg on\" - GESI MAC Port 0",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_AUTONEGOTIATION_1G_FD_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 27U,
        .tcName          = "100-Mbps Full-Duplex Auto-Neg Test",
        .tcRunInfo       = "\"sudo ethtool -s enp3s0f0 speed 100 duplex full autoneg on\" - GESI MAC Port 0",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_AUTONEGOTIATION_100M_FD_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 28U,
        .tcName          = "100-Mbps Half-Duplex Auto-Neg Test",
        .tcRunInfo       = "\"sudo ethtool -s enp3s0f0 speed 100 duplex half autoneg on\" - GESI MAC Port 0",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_AUTONEGOTIATION_100M_HD_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 29U,
        .tcName          = "DMA RxFlow Mtu Test",
        .tcRunInfo       = "NA - Loopback test - no external input needed",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_RXFLOW_MTU_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 30U,
        .tcName          = "PHY Strap mode Test",
        .tcRunInfo       = "Send 1000 packets to Host - GESI RMII MAC Port 7",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 2U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_PHY_STRAPPING_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 31U,
        .tcName          = "Priority Regeneration",
        .tcRunInfo       = "Host sends 10 packets per VLAN PCP, PCP is inverted and switch priority is remapped",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        =
        {
            ENET_TEST_TYPE_J721E,
        },
        .taskCfgId       = {TASK_CFG_ID_PRI_REGEN_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 32U,
        .tcName          = "SGMII 1G Digital loopback",
        .tcRunInfo       = "NA. Internal loopback",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = { ENET_TEST_TYPE_J721E,},
        .taskCfgId       = {TASK_CFG_ID_SGMII_LPBK_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 33U,
        .tcName          = "SGMII 1G FIFO Loopback",
        .tcRunInfo       = "NA. Internal loopback",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = { ENET_TEST_TYPE_J721E,},
        .taskCfgId       = {TASK_CFG_ID_SGMII_LPBK_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 34U,
        .tcName          = "CPSW9G QSGMII Switching test",
        .tcRunInfo       = "Use QSGMII ports for switching packets",
        .reqMapping      = "ADASVISION-3097, ADASVISION-3073, ADASVISION-3031, ADASVISION-3083",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 2U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_QSGMII_SWITCHING_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 35U,
        .tcName          = "CPSW9G All ports Switching test",
        .tcRunInfo       = "Switching between all 8-ports of GESI + QSGMII DB ",
        .reqMapping      = "",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 2U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_ALL_PORTS_SWITCH_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 36U,
        .tcName          = "CPTS Event Test",
        .tcRunInfo       = "Host sends time sync events and event information is printed, then PC ",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_CPTS_EVENT_TEST, },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 37U,
        .tcName          = "BCAST MCAST Rate Limit",
        .tcRunInfo       = "Use IXIA to generate traffic to verify BCAST/MCAST Rate limit configuration",
        .reqMapping      = NULL,
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        =
        {
            ENET_TEST_TYPE_J721E,
        },
        .taskCfgId =
        {
            TASK_CFG_ID_BCASTMCAST_LIMIT_TEST,
        },
    },
    {
        .enableTest      = TEST_ENABLE,
        .tcId            = 38U,
        .tcName          = "CPSW9G Directed packet test",
        .tcRunInfo       = "Host sends packets 100 directed packets to MAC port 3 using multicast address added for MAC port 2 ",
        .reqMapping      = "ADASVISION-3143",
        .disableInfo     = NULL,
        .printEnable     = PRINT_DISABLE,
        .profilingEnable = PRF_DISABLE,
        .tcType          = (ENET_TCT_SANITY | ENET_TCT_FUNCTIONAL),
        .dcEnable        = DATA_CHECK_DISABLE,
        .iterationCnt    = 1U,
        .numTasks        = 1U,
        .testType        = {ENET_TEST_TYPE_J721E, },
        .taskCfgId       = {TASK_CFG_ID_DIRECTED_PKT_TEST, },
    },

};

#ifdef __cplusplus
}
#endif

#endif  /* ENET_TEST_CASES_H_ */
